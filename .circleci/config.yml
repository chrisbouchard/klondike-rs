version: 2.1

commands:
  rustup-nightly:
    steps:
      - run:
         name: Install Rust Nightly
         command: |
           # Install nightly toolchain
           rustup toolchain install nightly

  setup-sccache:
    parameters:
      toolchain:
        description: Rustup Toolchain Name
        type: string
        default: stable
    steps:
      - run:
          name: |
            Install sccache for << parameters.toolchain >>
          command: |
            cargo +<< parameters.toolchain >> install sccache
            # This configures Rust to use sccache.
            echo 'export "RUSTC_WRAPPER"="sccache"' >> $BASH_ENV
            # This is the maximum space sccache cache will use on disk.
            echo 'export "SCCACHE_CACHE_SIZE"="1G"' >> $BASH_ENV
            sccache --version
  restore-sccache-cache:
    parameters:
      toolchain:
        description: Rustup Toolchain Name
        type: string
        default: stable
    steps:
      - restore_cache:
          name: Restore sccache cache
          key: sccache-cache-<< parameters.toolchain >>-{{ arch }}-{{ .Environment.CIRCLE_JOB }}
  save-sccache-cache:
    parameters:
      toolchain:
        description: Rustup Toolchain Name
        type: string
        default: stable
    steps:
      - save_cache:
          name: Save sccache cache
          # We use {{ epoch }} to always upload a fresh cache:
          # Of course, restore_cache will not find this exact key,
          # but it will fall back to the closest key (aka the most recent).
          # See https://discuss.circleci.com/t/add-mechanism-to-update-existing-cache-key/9014/13
          key: sccache-cache-<< parameters.toolchain >>-{{ arch }}-{{ .Environment.CIRCLE_JOB }}-{{ epoch }}
          paths:
            - "~/.cache/sccache"

  cargo-test:
    parameters:
      toolchain:
        description: Rustup Toolchain Name
        type: string
        default: stable
    steps:
      - run:
          name: |
            Running tests for << parameters.toolchain >>
          command: |
            cargo +<< parameters.toolchain >> test

jobs:
  rust-tests-stable:
    docker:
      - image: circleci/rust:latest
    steps:
      - checkout
      - setup-sccache:
          toolchain: stable
      - restore-sccache-cache:
          toolchain: stable
      - cargo-test:
          toolchain: stable
      - save-sccache-cache:
          toolchain: stable

  rust-tests-nightly:
    docker:
      - image: circleci/rust:latest
    steps:
      - checkout
      - rustup-nightly
      - setup-sccache:
          toolchain: nightly
      - restore-sccache-cache:
          toolchain: nightly
      - cargo-test:
          toolchain: nightly
      - save-sccache-cache:
          toolchain: nightly

workflows:
  version: 2
  run-tests:
    jobs:
      - rust-tests-stable
      - rust-tests-nightly

